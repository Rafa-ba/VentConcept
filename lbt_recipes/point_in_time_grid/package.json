{
  "type": "RecipeInterface",
  "annotations": {},
  "api_version": "v1beta1",
  "metadata": {
    "type": "MetaData",
    "annotations": {},
    "name": "point-in-time-grid",
    "tag": "0.2.4",
    "app_version": null,
    "keywords": [
      "honeybee",
      "radiance",
      "ladybug-tools",
      "illuminance",
      "irradiance",
      "point-in-time-grid"
    ],
    "maintainers": [
      {
        "type": "Maintainer",
        "annotations": {},
        "name": "chris",
        "email": "chris@ladybug.tools"
      },
      {
        "type": "Maintainer",
        "annotations": {},
        "name": "ladybug-tools",
        "email": "info@ladybug.tools"
      }
    ],
    "home": "https://github.com/pollination/point-in-time-grid",
    "sources": [
      "https://hub.docker.com/r/ladybugtools/honeybee-radiance"
    ],
    "icon": "https://raw.githubusercontent.com/ladybug-tools/artwork/master/icons_components/honeybee/png/gridrecipe.png",
    "deprecated": null,
    "description": "Point-in-time grid-based recipe for Pollination.",
    "license": {
      "type": "License",
      "annotations": {},
      "name": "PolyForm Shield License 1.0.0",
      "url": "https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt"
    }
  },
  "source": null,
  "inputs": [
    {
      "type": "DAGStringInput",
      "annotations": {},
      "name": "grid-filter",
      "description": "Text for a grid identifer or a pattern to filter the sensor grids of the model that are simulated. For instance, first_floor_* will simulate only the sensor grids that have an identifier that starts with first_floor_. By default, all grids in the model will be simulated.",
      "default": "*",
      "alias": [
        {
          "type": "DAGStringInputAlias",
          "annotations": {},
          "name": "grid_filter",
          "description": "Text for a grid identifer or a pattern to filter the sensor grids of the model that are simulated. For instance, first_floor_* will simulate only the sensor grids that have an identifier that starts with first_floor_. By default, all grids in the model will be simulated.",
          "platform": [
            "grasshopper"
          ],
          "handler": [],
          "default": "*",
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": null
    },
    {
      "type": "DAGStringInput",
      "annotations": {},
      "name": "metric",
      "description": "Text for the type of metric to be output from the calculation. Choose from: illuminance, irradiance, luminance, radiance.",
      "default": "illuminance",
      "alias": [
        {
          "type": "DAGGenericInputAlias",
          "annotations": {},
          "name": "metric",
          "description": "Either an integer or the full name of a point-in-time metric to be computed by the recipe. (Default: illuminance). Choose from the following:\n* 0 = illuminance\n* 1 = irradiance\n* 2 = luminance\n* 3 = radiance",
          "platform": [
            "grasshopper"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.inputs.pit",
              "function": "point_in_time_metric_to_str",
              "index": 0
            }
          ],
          "default": "illuminance",
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": {
        "type": "string",
        "enum": [
          "illuminance",
          "irradiance",
          "luminance",
          "radiance"
        ]
      }
    },
    {
      "type": "DAGFileInput",
      "annotations": {},
      "name": "model",
      "description": "A Honeybee model in HBJSON file format.",
      "default": null,
      "alias": [
        {
          "type": "DAGGenericInputAlias",
          "annotations": {},
          "name": "model",
          "description": "A Honeybee Model to simulate or the path to a HBJSON file of a Model. This can also be the path to a HBpkl file, though this is only recommended for cases where the model is extremely large. Note that this model should have sensor grids assigned to it.",
          "platform": [
            "grasshopper"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.inputs.model",
              "function": "model_to_json_grid_check",
              "index": 0
            },
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "csharp",
              "module": "Pollination.RhinoHandlers",
              "function": "HBModelToJSON",
              "index": 0
            }
          ],
          "default": null,
          "required": true,
          "spec": null
        },
        {
          "type": "DAGLinkedInputAlias",
          "annotations": {},
          "name": "model",
          "description": "This input links the model to Rhino model.",
          "platform": [
            "rhino"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "csharp",
              "module": "Pollination.RhinoHandlers",
              "function": "RhinoHBModelToJSON",
              "index": 0
            }
          ],
          "default": null,
          "required": true,
          "spec": null
        }
      ],
      "required": true,
      "spec": null,
      "extensions": [
        "json",
        "hbjson"
      ]
    },
    {
      "type": "DAGStringInput",
      "annotations": {},
      "name": "radiance-parameters",
      "description": "The radiance parameters for ray tracing",
      "default": "-ab 2 -aa 0.1 -ad 2048 -ar 64",
      "alias": [
        {
          "type": "DAGStringInputAlias",
          "annotations": {},
          "name": "radiance_par",
          "description": "Text for the radiance parameters to be used for ray tracing. (Default: -ab 2 -aa 0.1 -ad 2048 -ar 64).",
          "platform": [
            "grasshopper"
          ],
          "handler": [],
          "default": "-ab 2 -aa 0.1 -ad 2048 -ar 64",
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": null
    },
    {
      "type": "DAGIntegerInput",
      "annotations": {},
      "name": "sensor-count",
      "description": "The maximum number of grid points per parallel execution",
      "default": 200,
      "alias": [
        {
          "type": "DAGIntegerInputAlias",
          "annotations": {},
          "name": "sensor_count",
          "description": "Positive integer for the number of sensor grid points per parallel execution. Lower numbers will result in sensor grids being split into more pieces and, since each grid piece is run by a separate worker, this can mean a faster simulation on machines with several CPUs. However ,If the number is too low, the overhad of splitting the grid will not be worth the time gained through parallelization. (Default: 200).",
          "platform": [
            "grasshopper"
          ],
          "handler": [],
          "default": 200,
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": {
        "type": "integer",
        "minimum": 1
      }
    },
    {
      "type": "DAGStringInput",
      "annotations": {},
      "name": "sky",
      "description": "Sky string for any type of sky (cie, climate-based, irradiance, illuminance). This can be a minimal representation of the sky through altitude and azimuth (eg. \"cie -alt 71.6 -az 185.2 -type 0\"). Or it can be a detailed specification of time and location (eg. \"climate-based 21 Jun 12:00 -lat 41.78 -lon -87.75 -tz 5 -dni 800 -dhi 120\"). Both the altitude and azimuth must be specified for the minimal representation to be used. See the honeybee-radiance sky CLI group for a full list of options (https://www.ladybug.tools/honeybee-radiance/docs/cli/sky.html).",
      "default": null,
      "alias": [],
      "required": true,
      "spec": null
    }
  ],
  "outputs": [
    {
      "type": "DAGFolderOutput",
      "annotations": {},
      "name": "results",
      "description": "Folder with raw result files (.res) that contain numerical values for each sensor. Values are in standard SI units of the input metric (lux, W/m2, cd/m2, W/m2-sr).",
      "from": {
        "type": "FolderReference",
        "annotations": {},
        "path": "results"
      },
      "alias": [
        {
          "type": "DAGGenericOutputAlias",
          "annotations": {},
          "name": "results",
          "description": "Numbers for the point-in-time value at each sensor. These can be plugged into the \"LB Spatial Heatmap\" component along with meshes of the sensor grids to visualize results. Values are in the standard SI units of the requested input metric.\n* illuminance = lux\n* irradiance = W/m2\n* luminance = cd/m2\n* radiance = W/m2-sr",
          "platform": [
            "grasshopper"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.outputs.daylight",
              "function": "read_pit_from_folder",
              "index": 0
            }
          ]
        }
      ],
      "required": true
    }
  ]
}