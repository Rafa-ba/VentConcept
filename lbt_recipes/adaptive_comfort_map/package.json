{
  "type": "RecipeInterface",
  "annotations": {},
  "api_version": "v1beta1",
  "metadata": {
    "type": "MetaData",
    "annotations": {},
    "name": "adaptive-comfort-map",
    "tag": "0.3.4",
    "app_version": null,
    "keywords": [
      "honeybee",
      "ladybug-tools",
      "thermal",
      "comfort",
      "adaptive"
    ],
    "maintainers": [
      {
        "type": "Maintainer",
        "annotations": {},
        "name": "chris",
        "email": "chris@ladybug.tools"
      },
      {
        "type": "Maintainer",
        "annotations": {},
        "name": "ladybug-tools",
        "email": "info@ladybug.tools"
      }
    ],
    "home": "https://github.com/pollination/adaptive-comfort-map",
    "sources": [],
    "icon": "https://raw.githubusercontent.com/ladybug-tools/artwork/master/icons_components/honeybee/png/adaptivemap.png",
    "deprecated": null,
    "description": "Adaptive thermal comfort map for Pollination.",
    "license": {
      "type": "License",
      "annotations": {},
      "name": "PolyForm Shield License 1.0.0",
      "url": "https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt"
    }
  },
  "source": null,
  "inputs": [
    {
      "type": "DAGStringInput",
      "annotations": {},
      "name": "air-speed",
      "description": "A single number for air speed in m/s or a string of a JSON array with numbers that align with the result-sql reporting period. This will be used for all indoor comfort evaluation.",
      "default": "0.1",
      "alias": [
        {
          "type": "DAGGenericInputAlias",
          "annotations": {},
          "name": "air_speed",
          "description": "A single number for air speed in m/s or an hourly data collection of air speeds that align with the input run_period. This will be used for all indoor comfort evaluation. Note that the EPW wind speed will be used for any outdoor sensors. (Default: 0.1).",
          "platform": [
            "grasshopper"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.inputs.data",
              "function": "value_or_data_to_str",
              "index": 0
            }
          ],
          "default": "0.1",
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": null
    },
    {
      "type": "DAGStringInput",
      "annotations": {},
      "name": "comfort-parameters",
      "description": "An AdaptiveParameter string to customize the assumptions of the Adaptive comfort model.",
      "default": "--standard ASHRAE-55",
      "alias": [
        {
          "type": "DAGStringInputAlias",
          "annotations": {},
          "name": "comfort_par",
          "description": "Optional comfort parameters from the \"LB Adaptive Comfort Parameters\" component to specify the criteria under which conditions are considered acceptable/comfortable. The default will use ASHRAE-55 adaptive comfort criteria.",
          "platform": [
            "grasshopper"
          ],
          "handler": [],
          "default": "--standard ASHRAE-55",
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": null
    },
    {
      "type": "DAGFileInput",
      "annotations": {},
      "name": "ddy",
      "description": "A DDY file with design days to be used for the initial sizing calculation.",
      "default": null,
      "alias": [
        {
          "type": "DAGGenericInputAlias",
          "annotations": {},
          "name": "ddy",
          "description": "The path to a .ddy file or an .epw file with design days to be used for the initial sizing calculation.",
          "platform": [
            "grasshopper"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.inputs.ddy",
              "function": "ddy_handler",
              "index": 0
            }
          ],
          "default": null,
          "required": true,
          "spec": null
        }
      ],
      "required": true,
      "spec": null,
      "extensions": [
        "ddy"
      ]
    },
    {
      "type": "DAGFileInput",
      "annotations": {},
      "name": "epw",
      "description": "EPW weather file to be used for the comfort map simulation.",
      "default": null,
      "alias": [],
      "required": true,
      "spec": null,
      "extensions": [
        "epw"
      ]
    },
    {
      "type": "DAGFileInput",
      "annotations": {},
      "name": "model",
      "description": "A Honeybee model in HBJSON file format.",
      "default": null,
      "alias": [
        {
          "type": "DAGGenericInputAlias",
          "annotations": {},
          "name": "model",
          "description": "A Honeybee Model to simulate or the path to a HBJSON file of a Model. Note that this model must contain rooms and have sensor grids assigned to it.",
          "platform": [
            "grasshopper"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.inputs.model",
              "function": "model_to_json_grid_room_check",
              "index": 0
            },
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "csharp",
              "module": "Pollination.RhinoHandlers",
              "function": "HBModelToJSON",
              "index": 0
            }
          ],
          "default": null,
          "required": true,
          "spec": null
        },
        {
          "type": "DAGLinkedInputAlias",
          "annotations": {},
          "name": "model",
          "description": "This input links the model to Rhino model.",
          "platform": [
            "rhino"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "csharp",
              "module": "Pollination.RhinoHandlers",
              "function": "RhinoHBModelToJSON",
              "index": 0
            }
          ],
          "default": null,
          "required": true,
          "spec": null
        }
      ],
      "required": true,
      "spec": null,
      "extensions": [
        "json",
        "hbjson"
      ]
    },
    {
      "type": "DAGNumberInput",
      "annotations": {},
      "name": "north",
      "description": "A a number between -360 and 360 for the counterclockwise difference between the North and the positive Y-axis in degrees.",
      "default": 0.0,
      "alias": [
        {
          "type": "DAGGenericInputAlias",
          "annotations": {},
          "name": "north",
          "description": "A number between -360 and 360 for the counterclockwise difference between the North and the positive Y-axis in degrees. This can also be Vector for the direction to North. (Default: 0).",
          "platform": [
            "grasshopper"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.inputs.north",
              "function": "north_vector_to_angle",
              "index": 0
            }
          ],
          "default": "0",
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": {
        "type": "number",
        "minimum": -360,
        "maximum": 360
      }
    },
    {
      "type": "DAGStringInput",
      "annotations": {},
      "name": "radiance-parameters",
      "description": "Radiance parameters for ray tracing.",
      "default": "-ab 2 -ad 5000 -lw 2e-05",
      "alias": [
        {
          "type": "DAGStringInputAlias",
          "annotations": {},
          "name": "radiance_par",
          "description": "Text for the radiance parameters to be used for ray tracing. (Default: -ab 2 -ad 5000 -lw 2e-05).",
          "platform": [
            "grasshopper"
          ],
          "handler": [],
          "default": "-ab 2 -ad 5000 -lw 2e-05",
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": null
    },
    {
      "type": "DAGStringInput",
      "annotations": {},
      "name": "run-period",
      "description": "An AnalysisPeriod string to set the start and end dates of the simulation (eg. \"6/21 to 9/21 between 0 and 23 @1\"). If None, the simulation will be annual.",
      "default": "",
      "alias": [
        {
          "type": "DAGStringInputAlias",
          "annotations": {},
          "name": "run_period",
          "description": "An AnalysisPeriod to set the start and end dates of the simulation. If None, the simulation will be annual.",
          "platform": [
            "grasshopper"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.inputs.runperiod",
              "function": "run_period_to_str",
              "index": 0
            }
          ],
          "default": "",
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": null
    },
    {
      "type": "DAGIntegerInput",
      "annotations": {},
      "name": "sensor-count",
      "description": "The maximum number of grid points per parallel execution.",
      "default": 200,
      "alias": [
        {
          "type": "DAGIntegerInputAlias",
          "annotations": {},
          "name": "sensor_count",
          "description": "Positive integer for the number of sensor grid points per parallel execution. Lower numbers will result in sensor grids being split into more pieces and, since each grid piece is run by a separate worker, this can mean a faster simulation on machines with several CPUs. However ,If the number is too low, the overhad of splitting the grid will not be worth the time gained through parallelization. (Default: 200).",
          "platform": [
            "grasshopper"
          ],
          "handler": [],
          "default": 200,
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": {
        "type": "integer",
        "minimum": 1
      }
    },
    {
      "type": "DAGStringInput",
      "annotations": {},
      "name": "solarcal-parameters",
      "description": "A SolarCalParameter string to customize the assumptions of the SolarCal model.",
      "default": "--posture seated --sharp 135 --absorptivity 0.7 --emissivity 0.95",
      "alias": [
        {
          "type": "DAGStringInputAlias",
          "annotations": {},
          "name": "solar_body_par",
          "description": "Optional solar body parameters from the \"LB Solar Body Parameters\" object to specify the properties of the human geometry assumed in the shortwave MRT calculation. The default assumes average skin/clothing absorptivity and a human subject always has their back to the sun at a 45-degree angle (SHARP = 135).",
          "platform": [
            "grasshopper"
          ],
          "handler": [],
          "default": "--posture seated --sharp 135 --absorptivity 0.7 --emissivity 0.95",
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": null
    }
  ],
  "outputs": [
    {
      "type": "DAGFolderOutput",
      "annotations": {},
      "name": "condition",
      "description": "A folder containing CSV maps of comfort conditions for each sensor grid. -1 indicates unacceptably cold conditions. +1 indicates unacceptably hot conditions. 0 indicates neutral (comfortable) conditions.",
      "from": {
        "type": "FolderReference",
        "annotations": {},
        "path": "results/condition"
      },
      "alias": [
        {
          "type": "DAGGenericOutputAlias",
          "annotations": {},
          "name": "condition",
          "description": "A folder containing CSV maps of comfort conditions for each sensor grid at each time step of the analysis. This can be connected to the \"HB Read Thermal Matrix\" component to parse detailed results into Grasshopper. -1 indicates unacceptably cold conditions. +1 indicates unacceptably hot conditions. 0 indicates neutral (comfortable) conditions.",
          "platform": [
            "grasshopper"
          ],
          "handler": []
        }
      ],
      "required": true
    },
    {
      "type": "DAGFolderOutput",
      "annotations": {},
      "name": "csp",
      "description": "A folder containing CSV values for Cold Sensation Percent (CSP). CSP is the percentage of occupied time where thermal conditions are colder than what is considered acceptable/comfortable.",
      "from": {
        "type": "FolderReference",
        "annotations": {},
        "path": "metrics/CSP"
      },
      "alias": [
        {
          "type": "DAGGenericOutputAlias",
          "annotations": {},
          "name": "CSP",
          "description": "Lists of values between 0 and 100 for the Cold Sensation Percent (CSP). These can be plugged into the \"LB Spatial Heatmap\" component along with meshes of the sensor grids to visualize uncomfortably cold locations. CSP is the percentage of occupied time where thermal conditions are colder than what is considered acceptable/comfortable. Occupied hours are determined from the occupancy schedules of each room (any time where the occupancy schedule is >= 0.1 will be considered occupied). Outdoor sensors are considered occupied at all times. More custom CSP studies can be done by post-processing the condition results.",
          "platform": [
            "grasshopper"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.outputs.comfort",
              "function": "read_comfort_percent_from_folder",
              "index": 0
            }
          ]
        },
        {
          "type": "DAGLinkedOutputAlias",
          "annotations": {},
          "name": "CSP",
          "description": null,
          "platform": [
            "rhino"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.outputs.comfort",
              "function": "read_comfort_percent_from_folder",
              "index": 0
            },
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "csharp",
              "module": "Pollination.RhinoHandlers",
              "function": "LoadMeshBasedResultsToRhino",
              "index": 0
            }
          ]
        }
      ],
      "required": true
    },
    {
      "type": "DAGFolderOutput",
      "annotations": {},
      "name": "degrees-from-neutral",
      "description": "A folder containing CSV maps of the degrees Celsius from the adaptive comfort neutral temperature for each sensor grid. This can be used to understand not just whether conditions are acceptable but how uncomfortably hot or cold they are.",
      "from": {
        "type": "FolderReference",
        "annotations": {},
        "path": "results/condition_intensity"
      },
      "alias": [
        {
          "type": "DAGGenericOutputAlias",
          "annotations": {},
          "name": "deg_neut",
          "description": "A folder containing CSV maps of the degrees Celsius from the adaptive comfort neutral temperature for each sensor grid at each time step of the analysis. This can be connected to the \"HB Read Thermal Matrix\" component to parse detailed results into Grasshopper. This can be used to understand not just whether conditions are acceptable but how uncomfortably hot or cold they are.",
          "platform": [
            "grasshopper"
          ],
          "handler": []
        }
      ],
      "required": true
    },
    {
      "type": "DAGFolderOutput",
      "annotations": {},
      "name": "hsp",
      "description": "A folder containing CSV values for Heat Sensation Percent (HSP). HSP is the percentage of occupied time where thermal conditions are hotter than what is considered acceptable/comfortable.",
      "from": {
        "type": "FolderReference",
        "annotations": {},
        "path": "metrics/HSP"
      },
      "alias": [
        {
          "type": "DAGGenericOutputAlias",
          "annotations": {},
          "name": "HSP",
          "description": "Lists of values between 0 and 100 for the Heat Sensation Percent (HSP). These can be plugged into the \"LB Spatial Heatmap\" component along with meshes of the sensor grids to visualize uncomfortably hot locations. HSP is the percentage of occupied time where thermal conditions are hotter than what is considered acceptable/comfortable. Occupied hours are determined from the occupancy schedules of each room (any time where the occupancy schedule is >= 0.1 will be considered occupied). Outdoor sensors are considered occupied at all times. More custom HSP studies can be done by post-processing the condition results.",
          "platform": [
            "grasshopper"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.outputs.comfort",
              "function": "read_comfort_percent_from_folder",
              "index": 0
            }
          ]
        },
        {
          "type": "DAGLinkedOutputAlias",
          "annotations": {},
          "name": "HSP",
          "description": null,
          "platform": [
            "rhino"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.outputs.comfort",
              "function": "read_comfort_percent_from_folder",
              "index": 0
            },
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "csharp",
              "module": "Pollination.RhinoHandlers",
              "function": "LoadMeshBasedResultsToRhino",
              "index": 0
            }
          ]
        }
      ],
      "required": true
    },
    {
      "type": "DAGFolderOutput",
      "annotations": {},
      "name": "results",
      "description": "A folder containing all results.",
      "from": {
        "type": "FolderReference",
        "annotations": {},
        "path": "results"
      },
      "alias": [],
      "required": true
    },
    {
      "type": "DAGFolderOutput",
      "annotations": {},
      "name": "tcp",
      "description": "A folder containing CSV values for Thermal Comfort Percent (TCP). TCP is the percentage of occupied time where thermal conditions are acceptable/comfortable.",
      "from": {
        "type": "FolderReference",
        "annotations": {},
        "path": "metrics/TCP"
      },
      "alias": [
        {
          "type": "DAGGenericOutputAlias",
          "annotations": {},
          "name": "TCP",
          "description": "Lists of values between 0 and 100 for the Thermal Comfort Percent (TCP). These can be plugged into the \"LB Spatial Heatmap\" component along with meshes of the sensor grids to visualize spatial thermal comfort. TCP is the percentage of occupied time where thermal conditions are acceptable/comfortable. Occupied hours are determined from the occupancy schedules of each room (any time where the occupancy schedule is >= 0.1 will be considered occupied). Outdoor sensors are considered occupied at all times. More custom TCP studies can be done by post-processing the condition results.",
          "platform": [
            "grasshopper"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.outputs.comfort",
              "function": "read_comfort_percent_from_folder",
              "index": 0
            }
          ]
        },
        {
          "type": "DAGLinkedOutputAlias",
          "annotations": {},
          "name": "TCP",
          "description": null,
          "platform": [
            "rhino"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.outputs.comfort",
              "function": "read_comfort_percent_from_folder",
              "index": 0
            },
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "csharp",
              "module": "Pollination.RhinoHandlers",
              "function": "LoadMeshBasedResultsToRhino",
              "index": 0
            }
          ]
        }
      ],
      "required": true
    },
    {
      "type": "DAGFolderOutput",
      "annotations": {},
      "name": "temperature",
      "description": "A folder containing CSV maps of Operative Temperature for each sensor grid. Values are in Celsius.",
      "from": {
        "type": "FolderReference",
        "annotations": {},
        "path": "results/temperature"
      },
      "alias": [
        {
          "type": "DAGGenericOutputAlias",
          "annotations": {},
          "name": "op_temp",
          "description": "A folder containing CSV maps of Operative Temperature for each sensor grid at each time step of the analysis. This can be connected to the \"HB Read Thermal Matrix\" component to parse detailed results into Grasshopper. Values are in Celsius.",
          "platform": [
            "grasshopper"
          ],
          "handler": []
        }
      ],
      "required": true
    }
  ]
}